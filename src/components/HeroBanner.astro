<header>
  <div class="hero-banner-back"></div>
  <div class="container hero-banner-front">
    <div class="hero-banner__title">
      <h1 class="lato-bold">
        Chimbala Wright <sub
          >/raÉªt/ <button class="button" id="pronunciation"
            ><svg
              xmlns="http://www.w3.org/2000/svg"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              fill="#f2d0a4ff"
              height="0.8em"
              width="0.8em"
              version="1.1"
              id="Layer_1"
              viewBox="0 0 224.001 224.001"
              xml:space="preserve"
            >
              <g transform="translate(0 -562.36)">
                <g>
                  <g>
                    <path
                      d="M160.6,562.403c-2.1,0-4.2,0.5-5.8,1.6l-95,47.2H14.2c-7.9,0-14.2,6.3-14.2,14.2v98.1c0,7.3,6.3,13.6,14.2,13.6h45.6     l95,47.7c8.9,4.7,19.9-2.1,19.9-12.6v-195.7C174.8,568.703,168.5,562.403,160.6,562.403z M147,749.703l-77.6-38.8     c-2.1-1-4.2-1.6-6.3-1.6H28v-69.8h35.1c2.1,0,4.2-0.5,6.3-1.6l77.6-38.8V749.703z"
                    ></path>
                    <path
                      d="M209.9,635.903c-7.9,0-14.2,6.3-14.2,14.2v48.8c0,18.9,28.3,18.9,28.3,0v-48.8     C224.1,642.203,217.8,635.303,209.9,635.903z"
                    ></path>
                  </g>
                </g>
              </g>
            </svg></button
          ></sub
        >
      </h1>
      <blockquote>
        <p>n</p>
        <p>
          (Professions) (now <em>chiefly in combination</em>) a person who
          creates, builds, or repairs something specified.
        </p>
      </blockquote>
    </div>
    <ul>
      <li>Cape Town, South Africa</li>
      <li>
        <a href="https://www.linkedin.com/in/chimbala-wright/"
          >https://www.linkedin.com/in/chimbala-wright/</a
        >
      </li>
    </ul>
  </div>
</header>

<style>
  h1 {
    font-size: 3rem;
    line-height: 2.5rem;
  }
  sub {
    font-size: 0.4em;
  }
  header {
    background-color: var(--paynes-gray);
    background-image: url(table-mountain.jpeg);
    background-size: cover;
    background-position: 50% 40%;
    background-blend-mode: multiply;
    color: var(--ghost-white);
    display: grid;
    height: 50dvh;
    position: fixed;
    width: 100%;
    word-break: break-word;
  }
  a {
    color: var(--sunset);
  }
  blockquote {
    opacity: 0.7;
  }
  .hero-banner-front {
    grid-row: 1;
    grid-column: 1;
    z-index: 1;
    padding-top: max(var(--base-padding), 9vw);
  }
  .hero-banner-back {
    z-index: 0;
    grid-row: 1;
    grid-column: 1;
    display: grid;
    grid-auto-flow: row;
    grid-template-columns: repeat(8, 1fr);
    gap: 4px;
    padding: 5px;
  }
  .hero-banner__title {
    display: grid;
    gap: 0.5rem;
    grid-template-columns: repeat(auto-fit, minmax(min(600px, 100%), 1fr));
  }
  :global(.hero-banner-dot) {
    display: grid;
    overflow: hidden;
  }
  :global(.hero-banner-dot::before) {
    content: "";
    background-color: var(--paynes-gray);
    filter: blur(4px);
    opacity: 50%;
    margin: -5px;
  }
</style>

<script>
  import anime from "animejs/lib/anime.es";

  const surnameSound = new Audio("/wright.mp3");
  const pronunciationButton = document.querySelector(
    "#pronunciation"
  ) as HTMLButtonElement;
  pronunciationButton.addEventListener("click", () => surnameSound.play());

  const dotsFragment = document.createDocumentFragment();
  const grid = [8, 6];
  const cell = 55;
  const numberOfElements = grid[0] * grid[1];

  for (var i = 0; i < numberOfElements; i++) {
    const dotEl = document.createElement("div");
    dotEl.classList.add("hero-banner-dot");
    dotsFragment.appendChild(dotEl);
  }

  document.querySelector(".hero-banner-back")?.appendChild(dotsFragment);

  anime({
    targets: ".hero-banner-dot",
    scale: [
      { value: 0.2, easing: "easeOutSine", duration: 500 },
      { value: 1, easing: "easeInOutQuad", duration: 1200 },
    ],
    delay: anime.stagger(200, { grid, from: "center" }),
    //loop: true,
  });
</script>
